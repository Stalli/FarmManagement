@model SeedExpenseModel

<style type="text/css">
    @@media screen and (min-width: 768px) {
        .modal-dialog {
            width: 800px;
        }
    }
</style>

@using (Ajax.BeginForm("CreateUpdateSeedExpense", "Expense", new AjaxOptions
{
    OnBegin = "blockUI('.modal-dialog');",
    OnSuccess = "onSuccessResponse",
    OnFailure = "onFailureResponse",
    OnComplete = "$('.modal-dialog').unblock();"
}, new { @class = "form-horizontal" }))
{

    <div class="modal-form form-body">

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.CustomLabelFor(x => x.FarmId)
                    <div class="col-md-8">
                        <input id="drpFarmId" name="FarmId" class="form-control-input" value="@Model.FarmId" />
                        @Html.ValidationMessageFor(x => x.FarmId)
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.CustomLabelFor(x => x.AreaId)
                    <div class="col-md-8">
                        <input id="drpAreaId" name="AreaId" class="form-control-input" value="@Model.AreaId" />
                        @Html.ValidationMessageFor(x => x.AreaId)
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.CustomLabelFor(x => x.AccountId)
                    <div class="col-md-8">
                        <input id="drpAccountId" name="AccountId" class="form-control-input" value="@Model.AccountId" />
                        @Html.ValidationMessageFor(x => x.AccountId)
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.CustomLabelFor(x => x.SeedId)
                    <div class="col-md-8">
                        <input id="drpSeedId" name="SeedId" class="form-control-input" value="@Model.SeedId" />
                        @Html.ValidationMessageFor(x => x.SeedId)
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.CustomLabelFor(x => x.Quality)
                    <div class="col-md-8">
                        <span id="Quality">@Model.Quality</span>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.CustomLabelFor(x => x.Quantity)
                    <div class="col-md-8">
                        <span id="Quantity">@Model.Quantity</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.CustomLabelFor(x => x.QuantityInNumber)
                    <div class="col-md-8">
                        @Html.TextBoxFor(x => x.QuantityInNumber)
                        @Html.ValidationMessageFor(x => x.QuantityInNumber)
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.CustomLabelFor(x => x.Date)
                    <div class="col-md-8">
                        @Html.TextBoxFor(x => x.Date, new { @class = "date-picker" })
                        @Html.ValidationMessageFor(x => x.Date)
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.CustomLabelFor(x => x.UserId)
                    <div class="col-md-8">
                        <input id="drpSeedUserId" name="UserId" class="form-control-input" value="@Model.UserId" />
                        @Html.ValidationMessageFor(x => x.UserId)
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.CustomLabelFor(x => x.Description)
                    <div class="col-md-8">
                        @Html.TextAreaFor(x => x.Description)
                        @Html.ValidationMessageFor(x => x.Description)
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">
            Close
        </button>
        <button type="submit" id="btnSeedExpense" class="btn btn-primary">
            @(Model.Id > 0 ? "Update" : "Create")
        </button>
    </div>

    @Html.HiddenFor(x => x.Id)
    @Html.Hidden("hdnTotalLeftSeed")
    @Html.HiddenFor(x => x.SeedId)
}

<script>
    $(document).ready(function () {

        $(".modal-dialog input[type='text'], .modal-dialog textarea").not(".date-picker").addClass("form-control");
        $(".modal-dialog .date-picker").addClass("form-control-input");
        $(".modal-dialog label").addClass("col-md-4");

        $(".date-picker").kendoDatePicker();

        bindFarm("drpFarmId");
        bindArea("drpAreaId");
        bindAccount("drpAccountId");

        bindCropName("drpSeedId");
        bindPayByEmployee("drpSeedUserId");

        $("#drpSeedId").change(function () {
            getTotalSeed();
        });

        @if (Model.Id > 0)
	    {
          <text> getTotalSeed();</text>
	    }


        $("#btnSeedExpense").click(function (event) {
            if (!$("form").valid()) {
                return;
            }

            $("form").find("input.form-control-input").not(".date-picker").each(function () {
                if ($(this).val() == "" || $(this).val() <= 0) {
                    var name = $(this).attr("Id").replace('drp', '').replace('Id', '');
                    showErrorMessage("Please select the " + name);
                    event.preventDefault();
                    return false;
                }
            });

            if (!validateSeedQuantity()) {
                event.preventDefault();
                return;
            }
        });
    });

    function validateSeedQuantity() {
        var totalSeed = parseFloat($("#hdnTotalLeftSeed").val());
        var seed = parseFloat($("#QuantityInNumber").val());

        if (totalSeed < seed) {
            showErrorMessage("You don't have insufficient seed to use.");
            return false;
        }

        return true;
    }

    function getTotalSeed() {

        $("#hdnTotalLeftSeed").val("");
        $("#Quantity, #Quality").text("");

        var seedId = $("#drpSeedId").val();
        if (seedId == "" || seedId <= 0) {
            return;
        }

        $.get('@Url.Action("GetTotalSeed", "Expense")', { seedId: seedId }, function (response) {
            var totalSeed = response.TotalLeftSeed;
            @if (Model.Id > 0)
	        {
            <text>
            if ($("#SeedId").val() == seedId) {
                totalSeed += parseInt('@Model.QuantityInNumber')
            }
            </text>
	        }
            $("#hdnTotalLeftSeed").val(totalSeed);
            $('#Quantity').text(response.Quantity);
            $('#Quality').text(response.Quality);
        });
    }
</script>
